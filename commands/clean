#!/usr/bin/env bash

summary='Remove images or containers'
usage="Usage: dockerutil clean [OPTIONS]"

# global variables
dryRun=true
dangling=false
grepContainer=false
grepContainerPattern=''
grepImage=false
grepImagePattern=''

function displayUsageAndSummary {
    printf "%s\n\n%s\n" "$usage" "$summary"
}

function displayHelp {
    displayUsageAndSummary
    echo ''
    declare -A optionsTable
    local numFlags=5
    optionsTable["0,0"]='-c PATTERN'
    optionsTable["0,1"]='Remove all containers matched by PATTERN'
    optionsTable["1,0"]='-d'
    optionsTable["1,1"]='Remove all images tagged as <none>'
    optionsTable["2,0"]='-r'
    optionsTable["2,1"]='If the -r option is not given, display all images or containers that would be removed'
    optionsTable["3,0"]='-t PATTERN'
    optionsTable["3,1"]='Remove all images matched by PATTERN'
    optionsTable["4,0"]='-h'
    optionsTable["4,1"]='Print usage and options'
    i=0
    while [ $i -lt $numFlags ]; do
        printf '%4s'
        printf "%-14s%s\n" "${optionsTable["$i",0]}" "${optionsTable["$i",1]}"
        ((i = i + 1))
    done
}

function displayHelpPrompt {
    echo "See 'dockerutil clean -h' for more information"
}

function gatherDanglingImagesToRemove {
    if ! "$dangling"; then
        echo ''
        return 0
    fi
    docker images | grep none
}

function removeDanglingImages {
    if ! "$dangling"; then
        echo ''
        return 0
    fi
    if [ -z "$1" ]; then
        echo 'No dangling images to remove'
        return 0
    fi
    docker rmi -f $(docker images | grep none | awk '{print $3}')
}

function gatherImagesToRemove {
    if ! "$grepImage"; then
        echo ''
        return 0
    fi
    docker images | grep "$grepImagePattern"
}

function removeImages {
    if ! "$grepImage"; then
        echo ''
        return 0
    fi
    if [ -z "$1" ]; then
        echo 'No matching images to remove'
        return 0
    fi
    docker rmi -f $(docker images | grep $grepImagePattern | awk '{print $3}')
}

function gatherContainersToRemove {
    if ! "$grepContainer"; then
        echo ''
        return 0
    fi
    docker ps -a | grep "$grepContainerPattern"
}

function removeContainers {
    if ! "$grepContainer"; then
        echo ''
        return 0
    fi
    if [ -z "$1" ]; then
        echo 'No matching containers to remove'
        return 0
    fi
    docker rm -f $(docker ps -a | grep $grepContainerPattern | awk '{print $NF}')
}

while getopts ":c:drt:h" option; do
    case "$option" in
        h)
            displayHelp
            exit 0
            ;;
        r)
            dryRun=false
            ;;
        d)
            dangling=true
            ;;
        c)
            grepContainer=true
            grepContainerPattern="$OPTARG"
            ;;
        t)
            grepImage=true
            grepImagePattern="$OPTARG"
            ;;
        \?)
            echo "invalid option: -$OPTARG" >&2
            echo ''
            displayHelpPrompt
            exit 1
            ;;
        :)
            echo "option -$OPTARG requires an argument"
            echo ''
            displayHelpPrompt
            exit 1
            ;;
    esac
done

if ! { "$dangling" || "$grepContainer" || "$grepImage"; } then
    echo 'Nothing will be removed: no removal strategy specified'
    echo ''
    displayHelpPrompt
else
    images=$(gatherImagesToRemove)
    danglingImages=$(gatherDanglingImagesToRemove)
    containers=$(gatherContainersToRemove)
    if "$dryRun"; then
        if [ -z "$images" ] && [ -z "$danglingImages" ] && [ -z "$containers" ]; then
            printf 'Nothing to remove\n'
        else
            printf 'Rerun with the -r option to remove the following:\n'
        fi
        if [ ! -z "$images" ]; then
            printf "\nImages:\n%s\n" "$images"
        fi
        if [ ! -z "$danglingImages" ]; then
            printf "\nDangling Images:\n%s\n" "$danglingImages"
        fi
        if [ ! -z "$containers" ]; then
            printf "\nContainers:\n%s\n" "$containers"
        fi
    else
        removeImages "$images"
        removeDanglingImages "$danglingImages"
        removeContainers "$containers"
    fi
fi
